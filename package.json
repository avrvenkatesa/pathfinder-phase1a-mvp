{
  "name": "rest-express",
  "version": "1.0.1",
  "type": "module",
  "license": "MIT",
  "scripts": {
    "dev": "cross-env CONTACTS_STUB=true DOTENV_CONFIG_PATH=server/.env NODE_ENV=development tsx -r dotenv/config server/index.ts",
    "trace": "cross-env CONTACTS_STUB=true DOTENV_CONFIG_PATH=server/.env NODE_ENV=development node --import tsx --import dotenv/config --trace-warnings --trace-uncaught server/index.ts",
     "port:free": "bash -ceu 'PORT=${PORT:-3000}; P=$(lsof -t -i:$PORT || true); [ -n \"$P\" ] && kill -TERM $P || true; sleep 1; P=$(lsof -t -i:$PORT || true); [ -n \"$P\" ] && kill -KILL $P || true'",
    "trace:3100": "cross-env PORT=3100 CONTACTS_STUB=true DOTENV_CONFIG_PATH=server/.env NODE_ENV=development node --import tsx --import dotenv/config --trace-warnings --trace-uncaught server/index.ts",
    "trace:clean": "npm run port:free && cross-env CONTACTS_STUB=true DOTENV_CONFIG_PATH=server/.env NODE_ENV=development node --import tsx --import dotenv/config --trace-warnings --trace-uncaught server/index.ts",
    "smoke": "bash -ceu 'PORT=${PORT:-3100}; PORT=$PORT npm run -s port:free >/dev/null 2>&1 || true; PORT=$PORT CONTACTS_STUB=true DOTENV_CONFIG_PATH=server/.env NODE_ENV=development node --import tsx --import dotenv/config server/index.ts & PID=$!; cleanup(){ kill -TERM $PID 2>/dev/null || true; wait $PID 2>/dev/null || true; }; trap cleanup EXIT INT TERM; for i in $(seq 1 120); do code=$(curl -s -o /dev/null -w \"%{http_code}\" http://127.0.0.1:$PORT/healthz || true); [ \"$code\" = 200 ] && break; sleep 0.5; done; [ \"$code\" = 200 ] || { echo \"healthz failed on $PORT\"; exit 1; }; echo; echo \"__canary:\"; curl -s http://127.0.0.1:$PORT/__canary; echo; echo \"api/health HEAD:\"; curl -sI http://127.0.0.1:$PORT/api/health | head -n1; echo; exit 0'",
    "smoke:ci": "npm run smoke",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "start": "cross-env NODE_ENV=production node dist/index.js",
    "check": "tsc",
    "type-check": "tsc --noEmit",
    "type-check:client": "cd client && tsc --noEmit",
    "type-check:server": "cd server && tsc --noEmit",
    "db:generate": "drizzle-kit generate --config drizzle.config.ts",
    "db:push": "dotenv -e server/.env -- drizzle-kit push --config drizzle.config.js",
    "db:studio": "dotenv -e server/.env -- drizzle-kit studio --config server/drizzle.config.ts",
    "db:seed:dry": "PGSCHEMA=public node scripts/seed.neon.mjs --dry",
    "db:seed": "PGSCHEMA=public node scripts/seed.neon.mjs",
    "db:verify": "dotenv -e server/.env -- node -e 'const { neon } = require(\"@neondatabase/serverless\");(async()=>{const sql=neon(process.env.DATABASE_URL);const [wfs,wis,sis,deps]=await Promise.all([sql`select count(*)::int c from workflow_definitions`,sql`select count(*)::int c from workflow_instances`,sql`select status, count(*)::int c from step_instances group by 1 order by 1`,sql`select count(*)::int c from step_dependencies`]);console.log({defs:wfs[0].c,instances:wis[0].c,deps:deps[0].c,stepStatus:sis});})();'",
    "db:full-setup": "npm run db:push && npm run db:seed && npm run db:verify",
    "drizzle:gen": "cd server && drizzle-kit generate --config ./drizzle.config.ts",
    "drizzle:push": "dotenv -e server/.env -- drizzle-kit push --config drizzle.config.js",
    "drizzle:studio": "dotenv -e server/.env -- drizzle-kit studio --config drizzle.config.js",
    "openapi:validate": "redocly lint server/docs/openapi.yaml",
    "openapi:lint": "spectral lint server/docs/openapi.yaml -r .spectral.yaml",
    "openapi:ci": "npm run openapi:validate && npm run openapi:lint",
    "openapi:bundle": "redocly bundle server/docs/openapi.yaml -o server/docs/openapi.bundle.yaml --ext yaml",
    "seed:workflow": "DOTENV_CONFIG_PATH=server/.env tsx -r dotenv/config server/scripts/seed-workflow.ts",
    "test": "cross-env NODE_ENV=test CONTACTS_STUB=true vitest --run",
    "test:watch": "cross-env NODE_ENV=test CONTACTS_STUB=true vitest --watch",
    "test:api": "cross-env NODE_ENV=test CONTACTS_STUB=true vitest --run server/routes/__tests__/*.spec.ts server/routes/__tests__/*.test.ts",
    "typecheck": "tsc -p tsconfig.server.m1.json --noEmit"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.3",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.4",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@tanstack/react-query": "^5.60.5",
    "@types/cookie-parser": "^1.4.9",
    "@types/memoizee": "^0.4.12",
    "@types/socket.io": "^3.0.1",
    "@types/uuid": "^10.0.0",
    "bull": "^4.16.5",
    "class-variance-authority": "^0.7.1",
    "claude": "^0.1.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "compression": "^1.8.1",
    "connect-pg-simple": "^10.0.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "csv-parser": "^3.2.0",
    "date-fns": "^3.6.0",
    "dotenv": "^17.2.2",
    "drizzle-orm": "^0.36.4",
    "drizzle-zod": "0.5.1",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-rate-limit": "^8.0.1",
    "express-session": "^1.18.2",
    "framer-motion": "^11.13.1",
    "helmet": "^8.1.0",
    "input-otp": "^1.4.2",
    "isomorphic-dompurify": "^2.26.0",
    "joi": "^18.0.1",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "lucide-react": "^0.453.0",
    "memoizee": "^0.4.17",
    "memorystore": "^1.6.7",
    "morgan": "^1.10.1",
    "nanoid": "^5.1.5",
    "next-themes": "^0.4.6",
    "node-cron": "^4.2.1",
    "openid-client": "^6.7.1",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "pg": "^8.16.3",
    "pino": "^9.9.5",
    "pino-http": "^10.5.0",
    "prom-client": "^15.1.3",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-organizational-chart": "^2.2.1",
    "react-resizable-panels": "^2.1.7",
    "recharts": "^2.15.4",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tw-animate-css": "^1.2.5",
    "uuid": "^13.0.0",
    "vaul": "^1.1.2",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "xss": "^1.0.15",
    "zod": "^3.25.76",
    "zod-validation-error": "^3.4.0"
  },
  "devDependencies": {
    "@redocly/cli": "^1.34.5",
    "@replit/vite-plugin-cartographer": "^0.2.8",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@stoplight/spectral-cli": "^6.15.0",
    "@tailwindcss/typography": "^0.5.15",
    "@tailwindcss/vite": "^4.1.3",
    "@types/compression": "^1.8.1",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/cors": "^2.8.19",
    "@types/express": "^4.17.21",
    "@types/express-rate-limit": "^5.1.3",
    "@types/express-session": "^1.18.0",
    "@types/helmet": "^0.0.48",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^20.16.11",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/pino": "^7.0.4",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/supertest": "^6.0.3",
    "@vitejs/plugin-react": "^4.3.2",
    "autoprefixer": "^10.4.20",
    "cross-env": "^10.0.0",
    "dotenv-cli": "^10.0.0",
    "drizzle-kit": "^0.24.2",
    "esbuild": "^0.25.0",
    "msw": "^2.10.4",
    "postcss": "^8.4.47",
    "supertest": "^7.1.4",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.1",
    "typescript": "^5.6.3",
    "vite": "^5.4.19",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  },
  "overrides": {
    "drizzle-orm": "0.36.4",
    "drizzle-zod": "0.5.1"
  }
}
