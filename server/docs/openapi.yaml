openapi: 3.0.3
info:
  title: Contact Management API - Phase 1A
  description: |
    Production-ready Contact Management API with hierarchical relationships, 
    advanced search, bulk operations, analytics, and workflow integration preparation.
    
    ## Features
    - Hierarchical contact management (companies → divisions → people)
    - Advanced search with full-text search and filtering
    - Bulk operations with transaction support
    - Comprehensive analytics and reporting
    - Workflow assignment preparation
    - Real-time monitoring and metrics
    - Production-ready security and validation
    
    ## Authentication
    All endpoints require authentication via session cookies or JWT tokens.
    
    ## Rate Limiting
    - General endpoints: 100 requests/minute
    - Authentication: 5 requests/15 minutes
    - Bulk operations: 10 requests/5 minutes
    - Search/read: 200 requests/minute
    
    ## Caching
    - Contact lists: 5 minutes
    - Individual contacts: 10 minutes
    - Analytics: 30 minutes
    - Stats: 15 minutes
    
  version: 1.0.0
  contact:
    name: API Support
    url: https://github.com/pathfinder/contact-api
    email: support@pathfinder.dev
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.pathfinder.dev/v1
    description: Production server
  - url: https://staging-api.pathfinder.dev/v1
    description: Staging server
  - url: http://localhost:5000/api/v1
    description: Development server

paths:
  # Contact Management Endpoints
  /contacts:
    get:
      summary: List contacts
      description: Retrieve a paginated list of contacts with optional filtering
      tags: [Contacts]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
        - name: type
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [company, division, person]
        - name: department
          in: query
          schema:
            type: array
            items:
              type: string
        - name: availability_status
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [available, busy, partially_available, unavailable]
        - name: search
          in: query
          description: Full-text search across name, email, job title, department, and notes
          schema:
            type: string
            maxLength: 500
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [name, created_at, updated_at, type]
            default: name
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: asc
      responses:
        '200':
          description: List of contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      contacts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Contact'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
                      filters:
                        type: object
                        description: Applied filters
                      performance:
                        $ref: '#/components/schemas/PerformanceMetrics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

    post:
      summary: Create a new contact
      description: Create a new contact with validation and hierarchy checks
      tags: [Contacts]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreate'
      responses:
        '201':
          description: Contact created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'

  /contacts/{id}:
    get:
      summary: Get contact by ID
      description: Retrieve a specific contact with full details
      tags: [Contacts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: include_children
          in: query
          description: Include child contacts in the response
          schema:
            type: boolean
            default: false
        - name: include_relationships
          in: query
          description: Include all relationships for this contact
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Contact details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ContactDetailed'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update contact
      description: Update an existing contact with validation
      tags: [Contacts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUpdate'
      responses:
        '200':
          description: Contact updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete contact
      description: Soft delete a contact (can be recovered)
      tags: [Contacts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: hard_delete
          in: query
          description: Permanently delete the contact (cannot be recovered)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Contact deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Contact deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'

  # Bulk Operations
  /contacts/bulk:
    post:
      summary: Bulk create contacts
      description: Create multiple contacts in a single transaction
      tags: [Bulk Operations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts:
                  type: array
                  maxItems: 1000
                  items:
                    $ref: '#/components/schemas/ContactCreate'
                options:
                  type: object
                  properties:
                    skip_duplicates:
                      type: boolean
                      default: false
                    validate_hierarchy:
                      type: boolean
                      default: true
                    create_transaction:
                      type: boolean
                      default: true
      responses:
        '201':
          description: Bulk operation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResult'

    put:
      summary: Bulk update contacts
      description: Update multiple contacts based on filters
      tags: [Bulk Operations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: object
                  properties:
                    ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    types:
                      type: array
                      items:
                        type: string
                        enum: [company, division, person]
                    departments:
                      type: array
                      items:
                        type: string
                updates:
                  $ref: '#/components/schemas/ContactUpdate'
                options:
                  type: object
                  properties:
                    skip_audit:
                      type: boolean
                      default: false
                    batch_size:
                      type: integer
                      minimum: 1
                      maximum: 100
                      default: 50
      responses:
        '200':
          description: Bulk update results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResult'

    delete:
      summary: Bulk delete contacts
      description: Delete multiple contacts (soft or hard delete)
      tags: [Bulk Operations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  maxItems: 1000
                  items:
                    type: string
                    format: uuid
                options:
                  type: object
                  properties:
                    soft_delete:
                      type: boolean
                      default: true
                    cascade_delete:
                      type: boolean
                      default: false
      responses:
        '200':
          description: Bulk delete results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResult'

  # Search and Analytics
  /contacts/search:
    post:
      summary: Advanced contact search
      description: Full-text search with advanced filtering and ranking
      tags: [Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  maxLength: 500
                  description: Search query (supports AND, OR, NOT operators)
                filters:
                  type: object
                  properties:
                    types:
                      type: array
                      items:
                        type: string
                        enum: [company, division, person]
                    departments:
                      type: array
                      items:
                        type: string
                    skills:
                      type: array
                      items:
                        type: string
                    availability_status:
                      type: array
                      items:
                        type: string
                        enum: [available, busy, partially_available, unavailable]
                limit:
                  type: integer
                  minimum: 1
                  maximum: 1000
                  default: 50
                offset:
                  type: integer
                  minimum: 0
                  default: 0
      responses:
        '200':
          description: Search results with ranking
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Contact'
                            - type: object
                              properties:
                                relevance_score:
                                  type: number
                                  format: float
                                match_highlights:
                                  type: array
                                  items:
                                    type: string
                      total_results:
                        type: integer
                      search_time_ms:
                        type: integer

  /contacts/stats:
    get:
      summary: Get contact statistics
      description: Basic statistics about contacts in the system
      tags: [Analytics]
      responses:
        '200':
          description: Contact statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      total_contacts:
                        type: integer
                      total_companies:
                        type: integer
                      total_divisions:
                        type: integer
                      total_people:
                        type: integer
                      availability_breakdown:
                        type: array
                        items:
                          type: object
                          properties:
                            status:
                              type: string
                            count:
                              type: integer
                      recent_growth:
                        type: integer
                        description: New contacts in last 30 days
                      last_updated:
                        type: string
                        format: date-time

  /analytics/contacts:
    get:
      summary: Detailed contact analytics
      description: Comprehensive analytics with trends and distributions
      tags: [Analytics]
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
        - name: period
          in: query
          schema:
            type: string
            enum: [day, week, month, quarter, year]
            default: month
      responses:
        '200':
          description: Detailed analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      summary:
                        type: object
                      distributions:
                        type: object
                      trends:
                        type: object
                      relationships:
                        type: object

  # Workflow Integration (Phase 1B Preparation)
  /workflow/contacts/match:
    post:
      summary: Find matching contacts for workflow
      description: Find contacts that match specific skill and availability requirements
      tags: [Workflow Integration]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skills:
                  type: array
                  items:
                    type: object
                    properties:
                      skill:
                        type: string
                      proficiency_level:
                        type: string
                        enum: [beginner, intermediate, advanced, expert]
                      required:
                        type: boolean
                        default: true
                      weight:
                        type: number
                        minimum: 0
                        maximum: 10
                        default: 5
                availability_requirement:
                  type: array
                  items:
                    type: string
                    enum: [available, partially_available]
                  default: [available]
                department_preference:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Matching contacts with scores
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      total_candidates:
                        type: integer
                      qualified_candidates:
                        type: integer
                      matches:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Contact'
                            - type: object
                              properties:
                                match_score:
                                  type: number
                                skill_match_percentage:
                                  type: integer
                                qualification_status:
                                  type: string
                                  enum: [fully_qualified, partially_qualified, not_qualified]
                                missing_skills:
                                  type: array
                                  items:
                                    type: string

  /workflow/capacity/analyze:
    post:
      summary: Analyze team capacity
      description: Analyze current team capacity and utilization for workflow planning
      tags: [Workflow Integration]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timeframe:
                  type: object
                  properties:
                    start_date:
                      type: string
                      format: date-time
                    end_date:
                      type: string
                      format: date-time
                filters:
                  type: object
                  properties:
                    departments:
                      type: array
                      items:
                        type: string
                    skills:
                      type: array
                      items:
                        type: string
      responses:
        '200':
          description: Capacity analysis results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      overview:
                        type: object
                      department_breakdown:
                        type: object
                      skill_distribution:
                        type: object
                      recommendations:
                        type: array
                        items:
                          type: object

  # System and Monitoring
  /health:
    get:
      summary: Health check
      description: Check system health and dependencies
      tags: [System]
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, unhealthy]
                  timestamp:
                    type: string
                    format: date-time
                  checks:
                    type: object
                  system:
                    type: object

  /metrics:
    get:
      summary: Application metrics
      description: Get application performance and usage metrics
      tags: [System]
      responses:
        '200':
          description: Application metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      application:
                        type: object
                      system:
                        type: object
                      timestamp:
                        type: string
                        format: date-time

components:
  schemas:
    Contact:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
        type:
          type: string
          enum: [company, division, person]
        parent_id:
          type: string
          format: uuid
          nullable: true
        job_title:
          type: string
          maxLength: 255
          nullable: true
        department:
          type: string
          maxLength: 255
          nullable: true
        skills:
          type: array
          items:
            type: string
            maxLength: 100
        availability_status:
          type: string
          enum: [available, busy, partially_available, unavailable]
          nullable: true
        notes:
          type: string
          maxLength: 5000
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true

    ContactCreate:
      type: object
      required: [name, type]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
        type:
          type: string
          enum: [company, division, person]
        parent_id:
          type: string
          format: uuid
          nullable: true
        job_title:
          type: string
          maxLength: 255
          nullable: true
        department:
          type: string
          maxLength: 255
          nullable: true
        skills:
          type: array
          items:
            type: string
            maxLength: 100
          default: []
        availability_status:
          type: string
          enum: [available, busy, partially_available, unavailable]
          nullable: true
        notes:
          type: string
          maxLength: 5000
          nullable: true

    ContactUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
        type:
          type: string
          enum: [company, division, person]
        parent_id:
          type: string
          format: uuid
          nullable: true
        job_title:
          type: string
          maxLength: 255
          nullable: true
        department:
          type: string
          maxLength: 255
          nullable: true
        skills:
          type: array
          items:
            type: string
            maxLength: 100
        availability_status:
          type: string
          enum: [available, busy, partially_available, unavailable]
          nullable: true
        notes:
          type: string
          maxLength: 5000
          nullable: true

    ContactDetailed:
      allOf:
        - $ref: '#/components/schemas/Contact'
        - type: object
          properties:
            children:
              type: array
              items:
                $ref: '#/components/schemas/Contact'
            relationships:
              type: array
              items:
                $ref: '#/components/schemas/Relationship'
            parent:
              $ref: '#/components/schemas/Contact'
              nullable: true

    Relationship:
      type: object
      properties:
        id:
          type: string
          format: uuid
        source_id:
          type: string
          format: uuid
        target_id:
          type: string
          format: uuid
        relationship_type:
          type: string
          enum: [reports_to, works_with, supervises, collaborates]
        notes:
          type: string
          maxLength: 1000
          nullable: true
        created_at:
          type: string
          format: date-time

    BulkOperationResult:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            summary:
              type: object
              properties:
                total:
                  type: integer
                created:
                  type: integer
                updated:
                  type: integer
                deleted:
                  type: integer
                skipped:
                  type: integer
                errors:
                  type: integer
            errors:
              type: array
              items:
                type: object
                properties:
                  item:
                    type: string
                  error:
                    type: string
            performance:
              $ref: '#/components/schemas/PerformanceMetrics'

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        pages:
          type: integer
        has_next:
          type: boolean
        has_prev:
          type: boolean

    PerformanceMetrics:
      type: object
      properties:
        duration:
          type: number
          description: Operation duration in milliseconds
        throughput:
          type: number
          description: Items processed per second
        cache_hit_rate:
          type: number
          description: Cache hit rate percentage

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            status_code:
              type: integer
            timestamp:
              type: string
              format: date-time
            path:
              type: string
            method:
              type: string
            details:
              type: object
            request_id:
              type: string

  responses:
    BadRequest:
      description: Bad request - validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: VALIDATION_ERROR
              message: Validation failed
              status_code: 400
              timestamp: "2024-01-01T00:00:00Z"

    Unauthorized:
      description: Unauthorized - authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: AUTHENTICATION_ERROR
              message: Authentication required
              status_code: 401

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: NOT_FOUND
              message: Contact not found
              status_code: 404

    Conflict:
      description: Conflict - resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: CONFLICT_ERROR
              message: Contact already exists
              status_code: 409

    RateLimited:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: RATE_LIMIT_ERROR
              message: Too many requests, please try again later
              status_code: 429

  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: session_id
      description: Session-based authentication
    
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication

    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key authentication

security:
  - sessionAuth: []
  - bearerAuth: []
  - apiKeyAuth: []

tags:
  - name: Contacts
    description: Contact management operations
  - name: Bulk Operations
    description: Bulk operations for efficient data management
  - name: Search
    description: Advanced search and filtering
  - name: Analytics
    description: Analytics and reporting
  - name: Workflow Integration
    description: Workflow integration preparation (Phase 1B)
  - name: System
    description: System health and monitoring

externalDocs:
  description: Find more info about the Contact Management API
  url: https://docs.pathfinder.dev/api